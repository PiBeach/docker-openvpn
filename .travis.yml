# Disallowing packages: openvpn
# If you require these packages, please review the package approval process at: https://github.com/travis-ci/apt-package-whitelist#package-approval-process
#addons:
#    apt:
#        sources:
#            - ubuntu-toolchain-r-test
#        packages:
#            - openvpn
sudo: required

env:
  global:
    - BASEIMAGE=project31/docker-openvpn
    - VERSION=latest
  matrix:
    - ARCH=amd64 FROM=multiarch/alpine:amd64-latest-stable IMAGE=$BASEIMAGE:amd64-$VERSION
    - ARCH=arm64 FROM=multiarch/alpine:arm64-latest-stable IMAGE=$BASEIMAGE:arm64-$VERSION

services:
    - docker

before_install:
    - sudo apt-get update
    - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
    - docker --version

install:
    - git clone https://github.com/docker-library/official-images.git official-images

stage: build
script:
# Set kernel switch to route calls over qemu; virtualization of the appropriate architecture of the container we are building
  - if [ $ARCH != 'amd64' ]; then docker run --rm --privileged multiarch/qemu-user-static:register --reset; fi
  - image="$IMAGE"
  - docker build --build-arg from=$FROM -t "$image" .
  - docker inspect "$image"
  - docker run --rm "$image" openvpn --version || true; # why does it return 1?
  - docker run --rm "$image" openssl version
  - official-images/test/run.sh "$image"
  - test/run.sh "$image"
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
  - docker push "$image"

jobs:
  include:
    - stage: manifest
      env:
        - ARCH=manifest FROM=$BASEIMAGE IMAGE=$BASEIMAGE
      script: 
      - docker run  -v /var/run/docker.sock:/var/run/docker.sock --rm project31/docker-manifest /bin/bash -c "docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD; docker manifest create $BASEIMAGE:$VERSION $BASEIMAGE:amd64-$VERSION $BASEIMAGE:arm64; docker manifest annotate $BASEIMAGE:$VERSION $BASEIMAGE:arm64-$VERSION --os linux --arch arm64; docker manifest annotate $BASEIMAGE:$VERSION $BASEIMAGE:amd64-$VERSION --os linux --arch amd64; docker manifest push $BASEIMAGE:$VERSION"
